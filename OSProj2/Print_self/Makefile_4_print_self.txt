Create a Makefile for compiling the module:

obj-m += print_self.o

all:
    make -C /lib/modules/$(shell uname -r)/build M=$(PWD) modules

clean:
    make -C /lib/modules/$(shell uname -r)/build M=$(PWD) clean


Step 4: Compile the Module
Run make inside the print_self_module directory to compile the module.

Step 5: Load and Remove the Module
To load the module, run: insmod print_self.ko
To remove the module, run: rmmod print_self
Step 6: Read the Module's Output
To see the output of the module, you can use dmesg -T command.

Answering the Questions:
When the module is loaded, the process recognized as current is the process 
that loaded the module itself.


In newer kernels, the parent of all processes is typically called systemd or
 systemd-journal. You will see these names in the output of the module instead of init.


The states observed can vary depending on the system's current state and activity.
 Common states include TASK_RUNNING, TASK_INTERRUPTIBLE, TASK_UNINTERRUPTIBLE, TASK_STOPPED, TASK_TRACED, etc.